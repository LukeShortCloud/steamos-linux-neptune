variables:
  DOCKER_DRIVER: overlay2
  KERNEL: 'bzImage'
  ROOTFS_NAME: 'ubuntu-19.04-desktopV4-amd64.img.qcow2'
  ROOTFS_IMAGE_URL: 'https://people.collabora.com/~laks/lava/kernel_test/ubuntu-19.04-desktopV4-amd64.img.qcow2.gz'
  GIT_AUTHOR_NAME: "Gitlab-ci"
  GIT_AUTHOR_EMAIL: "gitlab@gitlab.steamos.cloud"
  TAG: CI_${CI_PIPELINE_ID}_
  
before_script:
   - apt-get update -y

stages:
  - build

kernel build:
  stage: build
  tags:
     - autoscaled 
  before_script:
    - apt-get update -y
    - apt-get install -y rsync git build-essential bc kmod cpio flex cpio libncurses5-dev bison libssl-dev libelf-dev openssh-client curl qemu-system*
  script:
     - git config --global user.email ${GIT_AUTHOR_EMAIL}
     - git config --global user.name ${GIT_AUTHOR_NAME}
     - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.steamos.cloud/${CI_PROJECT_PATH}.git
     - cd linux-integration && git branch -a
     # Get last commit id on this repo and use it
     - last_commitid=$(git for-each-ref refs/remotes/origin/features --sort="-committerdate" --format='%(objectname:short)' | head -n1)
     #- last_commitid=$(git log --format="%H" -n 1)
     - CITAG=${TAG}${last_commitid}
     - echo "${CITAG}"
     # Use base branch
     - git checkout --track origin/base 
     - FEATURES=$(git branch -a | grep "features")
     - echo $FEATURES 
     - > 
       for feat in ${FEATURES} ; do
          branchname=${feat#remotes/}
          git merge --no-ff $branchname -m "Merge feature ${branchname}"
       done
     # Create manifest file
     - echo "Update the valve-integration tree" > COMMIT_MESG
     - echo "The valve-integration tree has been updated to include the latest patches." >> COMMIT_MESG
     - echo "Below is the full manifest below:" >> COMMIT_MESG
     - git for-each-ref refs/remotes/origin/features --sort="-committerdate" --format='%(refname:short) %(objectname:short) %(contents:subject)' > MANIFEST
     - cat MANIFEST >> COMMIT_MESG
     - cat COMMIT_MESG
     # Build kernel
     - make x86_64_defconfig && make kvm_guest.config
     - ./scripts/kconfig/merge_config.sh .config .config-fragment
     - make -j`nproc`
     - git rev-parse HEAD &> commit_id_file
     - cp -v arch/x86/boot/bzImage .
     # download rootfs
     - curl  ${ROOTFS_IMAGE_URL} -o "${ROOTFS_NAME}.gz"
     - gunzip "${ROOTFS_NAME}.gz"
     - echo "Running cmd $QEMU_CMD"
     - qemu-system-x86_64 -enable-kvm -nographic -kernel ${KERNEL} -drive file=${ROOTFS_NAME},format=qcow2 -device virtio-serial-pci -virtfs local,path=$(pwd),mount_tag=steamlogs,security_model=none -m 8G -smp $(nproc) -cpu host -net user,hostfwd=tcp::2222-:22 -net nic,model=virtio --append "root=/dev/sda1 rw console=ttyS0"
     # files for artifacts
     - cp -v arch/x86/boot/bzImage ../
     - cp .config ../kernel_config
     - cp kernel_results.log ../
     # notify
     - test -f "fail.txt" && exit 1
     - echo "All tests passed..setup tags"
     # - sed -i -r 's/(url = .*):(.*)@(.*)/\1:'${LINUX_INTEGRATION_TOKEN}'@\3/' .git/config
     # - git add MANIFEST
     # - git commit -s -F COMMIT_MESG
     # - git tag ${CITAG}
     # - git tag -f latest
     # - git push -o ci.skip origin -f --tags
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - bzImage
      - kernel_config
      - kernel_results.log
